{"version":3,"file":"static/js/714.d67bb48c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MarkupTweets/MarkupTweets.module.css?a5af","redux/selectors.js","components/MarkupTweets/MarkupTweets.jsx","webpack://react-homework-template/./src/components/RenderTweets/RenderTweets.module.css?ae95","components/RenderTweets/RenderTweets.jsx","webpack://react-homework-template/./src/Layout/PaginationList/PaginationList.module.css?f95d","Layout/PaginationList/PaginationList.jsx","components/TweetCards/TweetCards.jsx","components/Dropdown/Dropdown.jsx","webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://react-homework-template/./src/pages/Tweets/TweetsPage.module.css?b6bc","pages/Tweets/TweetsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"MarkupTweets_listItem__83Amm\",\"title\":\"MarkupTweets_title__rpG10\",\"tweets\":\"MarkupTweets_tweets__PThrx\",\"followers\":\"MarkupTweets_followers__k8S1N\",\"btn\":\"MarkupTweets_btn__AWbfJ\",\"line\":\"MarkupTweets_line__p0c+m\",\"avatar\":\"MarkupTweets_avatar__xkZQG\",\"circle\":\"MarkupTweets_circle__8szMi\",\"logo\":\"MarkupTweets_logo__E+LPg\",\"messages\":\"MarkupTweets_messages__FbW1I\"};","export const selectUserKeys = store => store.storeUserKey.stateUserKeys;\nexport const selectFilteredTweets = store =>\n  store.storeUserKey.stateFilteredTweets;\nexport const selectAllTweets = store => store.storeUserKey.stateAllTweets;\nexport const selectUsersFilter = store => store.storeUserKey.stateUsersFilter;\nexport const selectCurrentPage = store => store.storeUserKey.stateCurrentPage;\nexport const selectTotalPages = store => store.storeUserKey.stateTotalPages;\n","import css from './MarkupTweets.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilteredTweets, toggleUserSubscribe } from 'redux/sliceUserKey';\nimport { selectUserKeys } from 'redux/selectors';\nimport { useState } from 'react';\nimport {\n  FOLLOW,\n  FOLLOWING,\n  PRIMARY_COLOR,\n  SECONDARY_COLOR,\n} from 'Services/variables';\nimport { useUpdateTweetMutation } from 'redux/tweetsApi';\n\nimport logo from '../../assets/logo-go-it.png';\nimport messages from '../../assets/messages.png';\nimport defaultAvatar from '../../assets/default-avatar.png';\n\nimport Notiflix from 'notiflix';\n\nexport function MarkupTweets(props) {\n  const { user, avatar, followers, tweets, id } = props;\n  const [updateTweet] = useUpdateTweetMutation();\n  const dispatch = useDispatch();\n  const isExist = useSelector(selectUserKeys);\n  const [btnColor, setBtnColor] = useState(\n    isExist.includes(id) ? SECONDARY_COLOR : PRIMARY_COLOR\n  );\n\n  const toggleFollow = followers => {\n    dispatch(toggleUserSubscribe(id));\n    if (isExist.includes(id)) {\n      followers = followers - 1;\n      setBtnColor(PRIMARY_COLOR);\n      Notiflix.Notify.warning(`You unsubscribed to ${user}`);\n    } else {\n      followers = followers + 1;\n      setBtnColor(SECONDARY_COLOR);\n      Notiflix.Notify.success(`You subscribed to ${user}`);\n    }\n\n    dispatch(setFilteredTweets());\n    updateTweet({ user, avatar, followers, tweets, id });\n  };\n\n  const numberOptions = { style: 'decimal', minimumFractionDigits: 0 };\n\n  return (\n    <li className={css.listItem}>\n      <img src={logo} alt=\"goIT\" className={css.logo} />\n      <img src={messages} alt=\"messages\" className={css.messages} />\n\n      <div className={css.line}>\n        <div className={css.circle}>\n          <img\n            src={avatar ? avatar : defaultAvatar}\n            alt=\"avatar\"\n            className={css.avatar}\n          />\n        </div>\n      </div>\n\n      <p className={`${css.title} ${css.tweets}`}>\n        {tweets.toLocaleString('en-US', numberOptions)} TWEETS\n      </p>\n\n      <p className={`${css.title} ${css.followers}`}>\n        {followers.toLocaleString('en-US', numberOptions)} FOLLOWERS\n      </p>\n      <button\n        type=\"button\"\n        className={css.btn}\n        style={{ backgroundColor: btnColor }}\n        onClick={() => {\n          toggleFollow(followers);\n        }}\n      >\n        {isExist.includes(id) ? FOLLOWING : FOLLOW}\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cardsList\":\"RenderTweets_cardsList__8AtxL\"};","import { MarkupTweets } from 'components/MarkupTweets/MarkupTweets';\nimport css from './RenderTweets.module.css';\n\nexport const RenderTweets = props => {\n  const { tweets } = props;\n\n  return (\n    <>\n      <ul className={css.cardsList}>\n        {tweets.map(({ id, ...props }) => {\n          return <MarkupTweets key={id} id={id} {...props}></MarkupTweets>;\n        })}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PaginationList_wrapper__3+XyQ\",\"list\":\"PaginationList_list__MBkwr\",\"listSideBtns\":\"PaginationList_listSideBtns__J-rK5\",\"btn\":\"PaginationList_btn__GsMPA\",\"sidesBtn\":\"PaginationList_sidesBtn__1qKn8\",\"activeBtn\":\"PaginationList_activeBtn__3Qpe+\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentPage, selectTotalPages } from 'redux/selectors';\nimport {\n  decrementPage,\n  incrementPage,\n  setCurrentPage,\n} from 'redux/sliceUserKey';\nimport css from './PaginationList.module.css';\n\nexport function PaginationList() {\n  const dispatch = useDispatch();\n  let currentPage = useSelector(selectCurrentPage);\n  const totalPages = useSelector(selectTotalPages);\n\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n\n  useEffect(() => {\n    if (totalPages < currentPage) {\n      dispatch(setCurrentPage(totalPages));\n    }\n  }, [currentPage, dispatch, totalPages]);\n\n  const pageSelection = pageNumber => {\n    dispatch(setCurrentPage(pageNumber));\n  };\n  const nextPage = () => dispatch(incrementPage());\n  const prevPage = () => dispatch(decrementPage());\n\n  return (\n    <div className={css.wrapper}>\n      <ul className={css.list}>\n        {pageNumbers.map(number => {\n          return (\n            <li key={number}>\n              <button\n                className={\n                  currentPage === number\n                    ? `${css.btn} ${css.activeBtn}`\n                    : css.btn\n                }\n                onClick={() => {\n                  pageSelection(number);\n                }}\n              >\n                {number}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <ul className={`${css.list} ${css.listSideBtns}`}>\n        <li>\n          <button\n            disabled={currentPage === 1}\n            onClick={prevPage}\n            className={`${css.btn} ${css.sidesBtn}`}\n          >\n            Prev Page\n          </button>\n        </li>\n        <li>\n          <button\n            disabled={currentPage === totalPages}\n            onClick={nextPage}\n            className={`${css.btn} ${css.sidesBtn}`}\n          >\n            Next Page\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { RenderTweets } from 'components/RenderTweets/RenderTweets';\nimport { PaginationList } from 'Layout/PaginationList/PaginationList';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentPage } from 'redux/selectors';\nimport { CARDS_PER_PAGE } from 'Services/variables';\n\nexport const TweetCards = ({ renderingTweets }) => {\n  const currentPage = useSelector(selectCurrentPage);\n  const lastIndex = currentPage * CARDS_PER_PAGE;\n  const firstIndex = lastIndex - CARDS_PER_PAGE;\n  const currentTweets = renderingTweets?.slice(firstIndex, lastIndex);\n\n  return (\n    <>\n      {currentTweets?.length > 0 && <RenderTweets tweets={currentTweets} />}\n      <PaginationList />\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectUsersFilter } from 'redux/selectors';\nimport {\n  setCurrentPage,\n  setFilteredTweets,\n  setUsersFilter,\n} from 'redux/sliceUserKey';\nimport { ALL, FOLLOW, FOLLOWING } from 'Services/variables';\n\nimport Dropdown from 'react-dropdown-select';\nimport Notiflix from 'notiflix';\n\nexport const MyDropdown = () => {\n  const dispatch = useDispatch();\n  const userFilter = useSelector(selectUsersFilter);\n\n  const setFilter = selectedOption => {\n    dispatch(setCurrentPage(1));\n    dispatch(setUsersFilter(selectedOption[0].value));\n    dispatch(setFilteredTweets());\n    Notiflix.Notify.info(`Show ${selectedOption[0].value} users`);\n  };\n\n  const options = [\n    { label: 'Show all', value: ALL },\n    { label: 'Follow', value: FOLLOW },\n    { label: 'Followings', value: FOLLOWING },\n  ];\n\n  return (\n    <>\n      <Dropdown\n        options={options}\n        values={[{ label: userFilter, value: userFilter }]}\n        onChange={setFilter}\n        placeholder=\"Select an option\"\n        style={{ width: '200px' }}\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Error_error__9uczQ\",\"errorTitle\":\"Error_errorTitle__6DVEt\",\"errorDetails\":\"Error_errorDetails__nF7YZ\",\"errorText\":\"Error_errorText__8AL-v\"};","import Notiflix from 'notiflix';\nimport css from './Error.module.css';\nexport const Error = ({ error }) => {\n  return (\n    <div className={css.error}>\n      {Notiflix.Notify.failure(`Увага помилка!`)}\n      <h1 className={css.errorTitle}>Помилка!</h1>\n\n      <h4 className={css.errorDetails}>Деталі помилки:</h4>\n      <p>\n        <b>data:</b> {error.data}\n      </p>\n      <p>\n        <b>error:</b> {error.error}\n      </p>\n      <p>\n        <b>originalStatus:</b> {error.originalStatus}\n      </p>\n      <p>\n        <b>status:</b> {error.status}\n      </p>\n\n      <p className={css.errorText}>\n        Якщо ви бачите \"<b>originalStatus:</b> 429\", то це значить, що ви\n        зробили забагато запитів на сервер.\n      </p>\n      <p>\n        Астанавітєсь! Тобто... Схаменіться! Оновіть сторінку і надалі робіть\n        запити на сервер не так швидко!\n      </p>\n      <p>Наші гноми втомлюються!!!</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"TweetsPage_btn__1n3+8\",\"myDropdown\":\"TweetsPage_myDropdown__ygnSY\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useGetUsersQuery } from 'redux/tweetsApi';\nimport {\n  setAllTweets,\n  setFilteredTweets,\n  setTotalPages,\n  setUsersFilter,\n} from 'redux/sliceUserKey';\nimport { PreLoader } from 'Layout/Preloader/PreLoader';\nimport { TweetCards } from 'components/TweetCards/TweetCards';\nimport { selectFilteredTweets, selectUsersFilter } from 'redux/selectors';\nimport { CARDS_PER_PAGE } from 'Services/variables';\nimport { useEffect } from 'react';\nimport { MyDropdown } from 'components/Dropdown/Dropdown';\n\nimport { Error } from 'components/Error/Error';\nimport css from './TweetsPage.module.css';\nimport { Link } from 'react-router-dom';\n\nconst TweetsPage = () => {\n  const dataQuery = useGetUsersQuery();\n  const { data: allTweets, isLoading, isError, error } = dataQuery;\n\n  const dispatch = useDispatch();\n  const userFilter = useSelector(selectUsersFilter);\n\n  const filteredTweets = useSelector(selectFilteredTweets);\n\n  const renderingTweets = filteredTweets;\n\n  const totalPages =\n    renderingTweets?.length > 0\n      ? Math.ceil(renderingTweets?.length / CARDS_PER_PAGE)\n      : 1;\n\n  useEffect(() => {\n    dispatch(setAllTweets(allTweets));\n    allTweets?.length > 0 && dispatch(setFilteredTweets());\n    dispatch(setUsersFilter(userFilter));\n    dispatch(setTotalPages(totalPages));\n  }, [allTweets, dispatch, isError, isLoading, totalPages, userFilter]);\n\n  return (\n    <div>\n      <Link to=\"/\" className={`btn btn-outline-primary ${css.btn} `}>\n        На головну\n      </Link>\n\n      <div className={css.myDropdown}>\n        <MyDropdown />\n      </div>\n      {isError && <Error error={error} />}\n      {isLoading ? (\n        <>\n          <PreLoader isLoading={isLoading} />\n        </>\n      ) : (\n        <>\n          <TweetCards renderingTweets={filteredTweets} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TweetsPage;\n"],"names":["selectUserKeys","store","storeUserKey","stateUserKeys","selectFilteredTweets","stateFilteredTweets","selectUsersFilter","stateUsersFilter","selectCurrentPage","stateCurrentPage","selectTotalPages","stateTotalPages","MarkupTweets","props","user","avatar","followers","tweets","id","useUpdateTweetMutation","updateTweet","dispatch","useDispatch","isExist","useSelector","useState","includes","SECONDARY_COLOR","PRIMARY_COLOR","btnColor","setBtnColor","numberOptions","style","minimumFractionDigits","className","css","src","alt","messages","toLocaleString","type","backgroundColor","onClick","toggleUserSubscribe","Notiflix","setFilteredTweets","toggleFollow","FOLLOWING","FOLLOW","RenderTweets","map","PaginationList","currentPage","totalPages","pageNumbers","i","push","useEffect","setCurrentPage","number","pageNumber","disabled","decrementPage","incrementPage","TweetCards","renderingTweets","lastIndex","CARDS_PER_PAGE","firstIndex","currentTweets","slice","length","MyDropdown","userFilter","options","label","value","ALL","values","onChange","selectedOption","setUsersFilter","placeholder","width","Error","error","data","originalStatus","status","dataQuery","useGetUsersQuery","allTweets","isLoading","isError","filteredTweets","Math","ceil","setAllTweets","setTotalPages","to","PreLoader"],"sourceRoot":""}